
name: beta-windows

on:
  push:
    branches: [ beta ]
jobs:
  build_test:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: [MSVC, GNU]
        platform: [Win32]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: beta
        submodules: true

    - name: Get msbuild executable
      id: get_msbuild_executable
      run: echo "::set-output name=path::$(vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe)"
      if: ${{ matrix.compiler == 'MSVC' }}

    - name: Create build directory
      run: mkdir -p .build

    - name: Generate project
      run: cmake ../cmake -G "Visual Studio 16 2019" -A ${{ matrix.platform }}
      working-directory: ./.build
      if: ${{ matrix.compiler == 'MSVC' }}

    - name: Generate project
      run: cmake ../cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-m32
      working-directory: ./.build
      if: ${{ matrix.compiler == 'GNU' &&  matrix.platform == 'Win32'}}

    - name: Build
      run: |
        & "${{steps.get_msbuild_executable.outputs.path}}" ALL_BUILD.vcxproj /p:Configuration=Debug /p:Platform=X86
      working-directory: ./.build
      shell: powershell
      if: ${{ matrix.compiler == 'MSVC' &&  matrix.platform == 'Win32'}}

    - name: Build
      run: mingw32-make
      working-directory: ./.build
      shell: powershell
      if: ${{ matrix.compiler == 'GNU' &&  matrix.platform == 'Win32'}}

    - name: Test
      run: |
        & "${{steps.get_msbuild_executable.outputs.path}}" RUN_TESTS.vcxproj /p:Configuration=Debug /p:Platform=X86
      working-directory: ./.build
      shell: powershell
      if: ${{ matrix.compiler == 'MSVC' &&  matrix.platform == 'Win32'}}

    - name: Test
      run: mingw32-make test
      working-directory: ./.build
      shell: powershell
      if: ${{ matrix.compiler == 'GNU' &&  matrix.platform == 'Win32'}}
