
name: Unix Build Test

on:
  push:
    branches: [ beta ]
jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [GNU]
        platform: [x32, x64]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: beta
        submodules: true

    - name: Create build directory
      run: mkdir -p .build
    
    - name: Install Multi-architecture
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386
        sudo apt install gcc-multilib
      shell: bash
      if: ${{ matrix.compiler == 'GNU' && matrix.platform == 'x32' }}

    - name: Check dir
      run: |
        ls /usr/bin
        ls /usr/lib32
        ls usr/lib/gcc/x86_64-linux-gnu/7
      shell: bash
      if: ${{ matrix.compiler == 'GNU' && matrix.platform == 'x32' }}

    - name: Generate project
      run: |
        export CC=/usr/bin/gcc-7
        export CXX=/usr/bin/g++-7
        cmake ../cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-m32
      working-directory: ./.build
      if: ${{ matrix.compiler == 'GNU' && matrix.platform == 'x32' }}

    - name: Generate project
      run: |
        export CC=/usr/bin/gcc-7
        export CXX=/usr/bin/g++-7
        cmake ../cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-m64
      working-directory: ./.build
      if: ${{ matrix.compiler == 'GNU' && matrix.platform == 'x64' }}

    - name: Build
      run: make
      working-directory: ./.build
      if: ${{ matrix.compiler == 'GNU'}}

    - name: Test
      run: make test
      working-directory: ./.build
      if: ${{ matrix.compiler == 'GNU' }}


